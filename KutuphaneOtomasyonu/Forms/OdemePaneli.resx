<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="GeriDonButonu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGIAAABBCAYAAAAqnXGWAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAg
        SQAAIEkBFHnGMAAAA05JREFUeF7t3E3IDVEYB/C3fKVIESsRthb2NjZKWcnO1oaEpY2FspBSshJbCyws
        bJSyUqS8WSilKFmQLCT5yOf1f+rOdO77/u/cmTnPc27nzPPUL/nnzqnzODNzz51mYTQazdtuOAE3xs7D
        AVgB7N8XiYaJrISz8B6W1m+4B3uBfbY4NExgFzyAWfUHZIWwYxSFhsZ2wmvoUteAHasYNDQkTXgFfeoI
        sGMWgYZGYpog9RG2ADt29mhoILYJVZ0Cdvzs0VCZXJg1miB1H9gY2aOhoj4X5qZ6C+uBjZU1GirRXAlV
        fYFNwMbLGg0VWDRB6jmsATZm1mgYSft0FNYVYGNmj4YRrFaC1HfYAWzc7NGwJ61b1Gl1Gdi4RaBhD9ZN
        uAmrgY1dBBp2lKIJxW+J07AD6ybcgkH8LkHDlnwlKKJhC9ZNuA3+C90Mcgtp9T1BSvaT1gEbu1g0bGC9
        Eu7ABmBjF42GU1g34SUMsgmChoQ0wfJ0tAjbgY09CDRcwnolPIW1wMYeDBoGrJvwFY7CPtg/B2daYp/t
        Yhuw+a3RcMy6CVL/xn+WXvI7ijw8twfYXE9thOUu6pBLdpAPwbI5XxaA3Ll4E+zqFxyEiXmf+MuYfKv1
        sq13sBnqeQ8bIOTC4pWmTkI992EThFxQvNLUI6jnPmyCeAZeaeoz1HMfNkF8A680JXdQ9dyHTRDeiHTV
        2Ag/NaWrxlOTX6zT1WOo5z5sgvDb13R1HOq5D5tQuQtetvUGJnacwwZUtoJvcdhV6y0O4Zt+NtVp06+S
        Yht8KNV7G7xi3Qz53nIJLsDFOXjSEvtsG6ch+oehimUz/sJVYOMOCg0JaYblwwODebRyGhpOYX2aGnQz
        aNjAuhnyvKu8o4ONXTQazmD9yOUgVwYNW0ixMvwh5Ja8GYpo2IFfwJXQsCNfGQpo2EOKZqwCNnYRaNiT
        dTPktXNs3CLQMILlru0PkOOzcbNHw0iyMqy+Z5wDNmb2aKjAamU8hCIv3DRUYtGMT7AR2HhZo6Ei7dOU
        vzgrgubK8FfJRdK6tfWXKyqIbcYH8NeNKolpxjFgxywCDY31uYDLK6mL3m+iYQJyAZc3DbSp68COURQa
        JiKvDZX/6T+B1Qs4DOyzhRkt/AczEvMRDmEK2AAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="S_OdemeButonu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGkAAACGCAYAAADekKRtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAN
        0AAADdABEGw9BwAADspJREFUeF7tnXnMFEUaxocbFUEBAU8OkSNyg+gCasQIEVCIggkbMGKIBMU/CBAQ
        BdRVBDerckUSUMB4g7gc0WSJyC2HghBYXMGAgMgpoCKXUPs85UzPTPc7xzfT3dUz00/yy+Sbr+voqpnq
        t+p9qyailAoJAFB5UA+0Bd1Bf/AUGCcmCHEfqDpoDfqA4WAqWAQ2gAPgAuCFTqQMQ3ID4rehEegJRoJZ
        YC04BpyNny1SYSGZgaqCDuAJMBOsB6eBs5HzRapAiBOoCXgUzABbQOrhyW2kCpU6EIctPsD57FgM8huu
        8kWqZCkCNQbDwEJgtlPsSBUuBSA+U7qBKWAXcDZOUJBuoFiBaAb/HSwA3jzkvUC6mWICqgEGgaXgLHA2
        QtCRbqzQgaqA3mA+OAOcN15ISDdZqEC0yKaD4/rmigXpZgsJqBoYDDbqGypGpBsvBCCazNPAKX0jxYzU
        AEEG6gq4MHlR30ApIDVE0IC4AtAPcDnGeRPFjtQoQQGqCAaA/+rKlipS45gG4jeHnbNbV7LUkRrJJFAP
        8K1VwRC5oUwAtQMrrIqFxJEazE+g2oAezNKx1sqK1HB+ANEooGvghK5ISGqkBvQaqBXYZFUiJD1SI3oF
        xIXPf4DzuvCQ7JAa0wugNmCHVXBI9kgN6iZQOTACFKYvJwhIDesWECMy/2MVFpIbUuO6AdQZHLQKCskd
        qYHzBaJpbcw4uOKKK9Qdd9yhxowZoz766CP13XffqZMnT6pffvlFv37//fdq/vz56tlnn1WdO3dW1apV
        E/MJDFIj5wpE622elbnPXHvtteqZZ55R27ZtU2fOnFEXLlxQFy9eVJcuXUL14uLffJ//53U7duxQ48eP
        VzfccIOYr3FQZ1eAaoJVVsY+UqlSJTV8+HC1Z88edfbsWUenZBKvP3funNq/f7/u5KpVq4rlGAN1zBuo
        PjDiTqhfv7767LPP1OnTp1GV/PXHH3+o5cuXqyZNmojlGQH1yguIMdL7rAx9pHXr1mrjxo162HJTf/75
        px4yO3bsKJbrO6hTzkDNgRELrkOHDmr79u0ZhzZ24syZM9WECRPUc889p1/ffPNNtX79et0Z6bR7925t
        WEjl+wrqkhNQC3DIyshHGjRooLZs2YJqyDp27JiaPHmytvCuv/56dfXVV6srr7xSW3F85d98/7bbblMv
        v/yyOnToUDSlU7QMmzZtKtbDN1CPMgMxUueIlYnPLF68OOU36P3331e33367uuqqq8S0dmrUqKHat2+v
        3n777WgOTn3xxReqcuXKYnpfQB3KBFQXGAtwf/rpp1MaCRzKaIZL6TJRt25dNWrUqGhOyTp//ryec0np
        fAF1yBqIcdXbrMQ+U6dOHW1mS+LElEOZlC5bOAmmKS/pyJEj6qabblLlypUT03oKys8KqAJg0LszE58Y
        N26cnoTaRcOgVq1aYpqywuHvtddei+acrFdeeUWVL19eTOcpKDsrIPqBnBn4AD+9fOjT2rI/i3bu3Kla
        tmwppsuVxo0baxPcroMHD6prrrlGTOMpKDsjUF9wyUrkM+ykrl27ivOhYcOGqYoVK4rpcqVChQrqscce
        i5aQrF69erleXkZQblogriYYjUNgo7366quOoe7AgQPqlltuEdPkC030vXv3RkuKa/r06eqyyy4T03gG
        yk0JxCDF5dbFhuDa3JdffukY6ubNm6fnPFKafKERwUmvXRs2bMjbQCkzKDclEA+McCbyGT7MJatuyJAh
        ni2Gcl40YMCAaElxceKbq5mfMyhXBGoIArFLrl69etoXZFePHj30UCilyRdacXfffXe0pLi4ANuoUSMx
        jWegXBGI5xc4ExiAn1ypk7p16+aZScx8uW5nF/1PN998s5jGM1Cu1EG9ki4yDDvpxIkTqFqyunfv7mkn
        denSJVpSXPRXGe8kiMZCoLaacKXh6NGjqF6yHn74YW1USGnyhWb2/fffHy0prt9//10v8EppPAPl2juJ
        5xw4LzTI5ZdfrieXduuOKxBeWVo0SEaOHBktKa5du3a5trqRNSg3sYMYn/0/658BgcbBBx984Jgn0Szn
        t0xKky/Vq1dXn3/+ebSkuBYtWqQ/NFIaz0C5iZ3ELY/OiwzD5wNXv+2dxOcD3RJuL3oyvxYtWqjffvst
        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
</value>
  </data>
</root>