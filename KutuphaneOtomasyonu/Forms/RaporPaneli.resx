<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="GeriDonButonu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGIAAABBCAYAAAAqnXGWAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAg
        SQAAIEkBFHnGMAAAA05JREFUeF7t3E3IDVEYB/C3fKVIESsRthb2NjZKWcnO1oaEpY2FspBSshJbCyws
        bJSyUqS8WSilKFmQLCT5yOf1f+rOdO77/u/cmTnPc27nzPPUL/nnzqnzODNzz51mYTQazdtuOAE3xs7D
        AVgB7N8XiYaJrISz8B6W1m+4B3uBfbY4NExgFzyAWfUHZIWwYxSFhsZ2wmvoUteAHasYNDQkTXgFfeoI
        sGMWgYZGYpog9RG2ADt29mhoILYJVZ0Cdvzs0VCZXJg1miB1H9gY2aOhoj4X5qZ6C+uBjZU1GirRXAlV
        fYFNwMbLGg0VWDRB6jmsATZm1mgYSft0FNYVYGNmj4YRrFaC1HfYAWzc7NGwJ61b1Gl1Gdi4RaBhD9ZN
        uAmrgY1dBBp2lKIJxW+J07AD6ybcgkH8LkHDlnwlKKJhC9ZNuA3+C90Mcgtp9T1BSvaT1gEbu1g0bGC9
        Eu7ABmBjF42GU1g34SUMsgmChoQ0wfJ0tAjbgY09CDRcwnolPIW1wMYeDBoGrJvwFY7CPtg/B2daYp/t
        Yhuw+a3RcMy6CVL/xn+WXvI7ijw8twfYXE9thOUu6pBLdpAPwbI5XxaA3Ll4E+zqFxyEiXmf+MuYfKv1
        sq13sBnqeQ8bIOTC4pWmTkI992EThFxQvNLUI6jnPmyCeAZeaeoz1HMfNkF8A680JXdQ9dyHTRDeiHTV
        2Ag/NaWrxlOTX6zT1WOo5z5sgvDb13R1HOq5D5tQuQtetvUGJnacwwZUtoJvcdhV6y0O4Zt+NtVp06+S
        Yht8KNV7G7xi3Qz53nIJLsDFOXjSEvtsG6ch+oehimUz/sJVYOMOCg0JaYblwwODebRyGhpOYX2aGnQz
        aNjAuhnyvKu8o4ONXTQazmD9yOUgVwYNW0ixMvwh5Ja8GYpo2IFfwJXQsCNfGQpo2EOKZqwCNnYRaNiT
        dTPktXNs3CLQMILlru0PkOOzcbNHw0iyMqy+Z5wDNmb2aKjAamU8hCIv3DRUYtGMT7AR2HhZo6Ei7dOU
        vzgrgubK8FfJRdK6tfWXKyqIbcYH8NeNKolpxjFgxywCDY31uYDLK6mL3m+iYQJyAZc3DbSp68COURQa
        JiKvDZX/6T+B1Qs4DOyzhRkt/AczEvMRDmEK2AAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>184, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>130</value>
  </metadata>
</root>